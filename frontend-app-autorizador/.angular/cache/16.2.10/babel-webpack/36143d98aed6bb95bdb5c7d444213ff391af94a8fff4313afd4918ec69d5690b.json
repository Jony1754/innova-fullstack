{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let AppComponent = class AppComponent {\n  constructor(primengConfig, formBuilder) {\n    this.primengConfig = primengConfig;\n    this.formBuilder = formBuilder;\n    this.blockedPanel = false;\n    this.jsonData = '';\n    this.apiResponse = '';\n    this.selectedFormType = 'cuenta';\n    this.cuentaForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      tarjetaActiva: [false, Validators.required],\n      limiteDisponible: ['', Validators.required]\n    });\n    this.transaccionForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      comerciante: ['', Validators.required],\n      cantidad: ['', Validators.required],\n      tiempo: ['', Validators.required]\n    });\n    this.formTypes = [{\n      label: 'Cuenta',\n      value: 'cuenta'\n    }, {\n      label: 'Transacción',\n      value: 'transaccion'\n    }];\n  }\n  onSubmit() {\n    let data;\n    if (this.selectedFormType === 'cuenta') {\n      data = this.cuentaForm.value;\n    } else if (this.selectedFormType === 'transaccion') {\n      data = this.transaccionForm.value;\n    }\n    // Aquí, enviar 'data' a tu servicio API...\n  }\n\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n  }\n};\n__decorate([ViewChild('myForm')], AppComponent.prototype, \"myForm\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","ViewChild","Validators","AppComponent","constructor","primengConfig","formBuilder","blockedPanel","jsonData","apiResponse","selectedFormType","cuentaForm","group","id","required","tarjetaActiva","limiteDisponible","transaccionForm","comerciante","cantidad","tiempo","formTypes","label","value","onSubmit","data","ngOnInit","ripple","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\jony1\\Desktop\\projects\\TECHNICAL_TESTS\\innova-schools-fullstack\\frontend-app-autorizador\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { PrimeNGConfig } from 'primeng/api';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n\n  @ViewChild('myForm') myForm: any;\n\n  blockedPanel = false;\n  jsonData = '';\n  apiResponse = '';\n  cuentaForm: FormGroup;\n  transaccionForm: FormGroup;\n  selectedFormType: string = 'cuenta';\n  formTypes: any[];\n\n  constructor(\n    private primengConfig: PrimeNGConfig,\n    private formBuilder: FormBuilder\n  ) {\n    this.cuentaForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      tarjetaActiva: [false, Validators.required],\n      limiteDisponible: ['', Validators.required],\n    });\n\n    this.transaccionForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      comerciante: ['', Validators.required],\n      cantidad: ['', Validators.required],\n      tiempo: ['', Validators.required],\n    });\n\n    this.formTypes = [\n      { label: 'Cuenta', value: 'cuenta' },\n      { label: 'Transacción', value: 'transaccion' },\n    ];\n  }\n  onSubmit() {\n    let data;\n    if (this.selectedFormType === 'cuenta') {\n      data = this.cuentaForm.value;\n    } else if (this.selectedFormType === 'transaccion') {\n      data = this.transaccionForm.value;\n    }\n\n    // Aquí, enviar 'data' a tu servicio API...\n  }\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAC5D,SAA8BC,UAAU,QAAQ,gBAAgB;AAQzD,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAYvBC,YACUC,aAA4B,EAC5BC,WAAwB;IADxB,KAAAD,aAAa,GAAbA,aAAa;IACb,KAAAC,WAAW,GAAXA,WAAW;IAVrB,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,WAAW,GAAG,EAAE;IAGhB,KAAAC,gBAAgB,GAAW,QAAQ;IAOjC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACvCC,EAAE,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAC7BC,aAAa,EAAE,CAAC,KAAK,EAAEb,UAAU,CAACY,QAAQ,CAAC;MAC3CE,gBAAgB,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACY,QAAQ;KAC3C,CAAC;IAEF,IAAI,CAACG,eAAe,GAAG,IAAI,CAACX,WAAW,CAACM,KAAK,CAAC;MAC5CC,EAAE,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAC7BI,WAAW,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACY,QAAQ,CAAC;MACtCK,QAAQ,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACY,QAAQ,CAAC;MACnCM,MAAM,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACY,QAAQ;KACjC,CAAC;IAEF,IAAI,CAACO,SAAS,GAAG,CACf;MAAEC,KAAK,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAQ,CAAE,EACpC;MAAED,KAAK,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAa,CAAE,CAC/C;EACH;EACAC,QAAQA,CAAA;IACN,IAAIC,IAAI;IACR,IAAI,IAAI,CAACf,gBAAgB,KAAK,QAAQ,EAAE;MACtCe,IAAI,GAAG,IAAI,CAACd,UAAU,CAACY,KAAK;KAC7B,MAAM,IAAI,IAAI,CAACb,gBAAgB,KAAK,aAAa,EAAE;MAClDe,IAAI,GAAG,IAAI,CAACR,eAAe,CAACM,KAAK;;IAGnC;EACF;;EACAG,QAAQA,CAAA;IACN,IAAI,CAACrB,aAAa,CAACsB,MAAM,GAAG,IAAI;EAClC;CACD;AA7CsBC,UAAA,EAApB3B,SAAS,CAAC,QAAQ,CAAC,C,2CAAa;AAFtBE,YAAY,GAAAyB,UAAA,EALxB5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACW5B,YAAY,CA+CxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}