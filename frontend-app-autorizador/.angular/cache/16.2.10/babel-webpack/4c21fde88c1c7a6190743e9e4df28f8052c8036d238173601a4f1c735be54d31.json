{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/inputtextarea\";\nimport * as i6 from \"primeng/toolbar\";\nimport * as i7 from \"primeng/dropdown\";\nimport * as i8 from \"primeng/panel\";\nimport * as i9 from \"@angular/forms\";\nfunction AppComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function AppComponent_div_9_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit());\n    });\n    i0.ɵɵelement(2, \"input\", 10)(3, \"input\", 11);\n    i0.ɵɵtext(4, \" Tarjeta Activa \");\n    i0.ɵɵelement(5, \"input\", 12);\n    i0.ɵɵelementStart(6, \"button\", 13);\n    i0.ɵɵtext(7, \"Enviar Cuenta\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cuentaForm);\n  }\n}\nfunction AppComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function AppComponent_div_10_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵelement(2, \"input\", 10)(3, \"input\", 14)(4, \"input\", 15)(5, \"input\", 16);\n    i0.ɵɵelementStart(6, \"button\", 13);\n    i0.ɵɵtext(7, \"Enviar Transacci\\u00F3n\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.transaccionForm);\n  }\n}\nexport class AppComponent {\n  constructor(primengConfig) {\n    this.primengConfig = primengConfig;\n    this.jsonData = '';\n    this.selectedFormType = 'cuenta';\n    this.apiResponse = '';\n    // selectedFormType = '';\n    this.formTypes = [{\n      label: 'Cuenta',\n      value: 'cuenta'\n    }, {\n      label: 'Transacción',\n      value: 'transaccion'\n    }];\n    this.cuentaForm = this['formBuilder'].group({\n      id: '',\n      tarjetaActiva: false,\n      limiteDisponible: ''\n    });\n    this.transaccionForm = this['formBuilder'].group({\n      id: '',\n      comerciante: '',\n      cantidad: '',\n      tiempo: ''\n    });\n  }\n  onSubmit() {\n    let data;\n    if (this.selectedFormType === 'cuenta') {\n      data = this.cuentaForm.value;\n    } else if (this.selectedFormType === 'transaccion') {\n      data = this.transaccionForm.value;\n    }\n    // Aquí, enviar 'data' a tu servicio API...\n  }\n\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.PrimeNGConfig));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"p-toolbar-group-left\"], [1, \"p-grid\"], [1, \"p-col-12\", \"p-md-6\"], [\"pInputTextarea\", \"\", \"rows\", \"15\", \"cols\", \"30\", \"placeholder\", \"Ingresa JSON aqu\\u00ED\"], [\"placeholder\", \"Selecciona un tipo\", 3, \"options\"], [4, \"ngIf\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Enviar Datos\"], [1, \"p-col-12\"], [\"header\", \"Consola de Resultados\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"id\", \"placeholder\", \"ID\"], [\"type\", \"checkbox\", \"formControlName\", \"tarjetaActiva\"], [\"type\", \"text\", \"formControlName\", \"limiteDisponible\", \"placeholder\", \"L\\u00EDmite Disponible\"], [\"type\", \"submit\"], [\"type\", \"text\", \"formControlName\", \"comerciante\", \"placeholder\", \"Comerciante\"], [\"type\", \"text\", \"formControlName\", \"cantidad\", \"placeholder\", \"Cantidad\"], [\"type\", \"text\", \"formControlName\", \"tiempo\", \"placeholder\", \"Tiempo\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-toolbar\")(1, \"div\", 0)(2, \"h1\");\n        i0.ɵɵtext(3, \"Aplicaci\\u00F3n Autorizador\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2);\n        i0.ɵɵelement(6, \"textarea\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelement(8, \"p-dropdown\", 4);\n        i0.ɵɵtemplate(9, AppComponent_div_9_Template, 8, 1, \"div\", 5);\n        i0.ɵɵtemplate(10, AppComponent_div_10_Template, 8, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"button\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 1)(13, \"div\", 7)(14, \"p-panel\", 8)(15, \"p\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(17, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"options\", ctx.formTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFormType === \"cuenta\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFormType === \"transaccion\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.apiResponse);\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterOutlet, i4.ButtonDirective, i5.InputTextarea, i6.Toolbar, i7.Dropdown, i8.Panel, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.CheckboxControlValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","AppComponent_div_9_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","cuentaForm","AppComponent_div_10_Template_form_ngSubmit_1_listener","_r5","ctx_r4","ctx_r1","transaccionForm","AppComponent","constructor","primengConfig","jsonData","selectedFormType","apiResponse","formTypes","label","value","group","id","tarjetaActiva","limiteDisponible","comerciante","cantidad","tiempo","data","ngOnInit","ripple","_","ɵɵdirectiveInject","i1","PrimeNGConfig","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_div_9_Template","AppComponent_div_10_Template","ɵɵtextInterpolate"],"sources":["C:\\Users\\jony1\\Desktop\\projects\\TECHNICAL_TESTS\\innova-schools-fullstack\\frontend-app-autorizador\\src\\app\\app.component.ts","C:\\Users\\jony1\\Desktop\\projects\\TECHNICAL_TESTS\\innova-schools-fullstack\\frontend-app-autorizador\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { PrimeNGConfig } from 'primeng/api';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  [x: string]: any;\n  jsonData = '';\n  selectedFormType: string = 'cuenta';\n  apiResponse = '';\n  cuentaForm: FormGroup;\n  transaccionForm: FormGroup;\n  // selectedFormType = '';\n\n  formTypes = [\n    { label: 'Cuenta', value: 'cuenta' },\n    { label: 'Transacción', value: 'transaccion' },\n  ];\n  constructor(private primengConfig: PrimeNGConfig) {\n    this.cuentaForm = this['formBuilder'].group({\n      id: '',\n      tarjetaActiva: false,\n      limiteDisponible: '',\n    });\n\n    this.transaccionForm = this['formBuilder'].group({\n      id: '',\n      comerciante: '',\n      cantidad: '',\n      tiempo: '',\n    });\n  }\n  onSubmit() {\n    let data;\n    if (this.selectedFormType === 'cuenta') {\n      data = this.cuentaForm.value;\n    } else if (this.selectedFormType === 'transaccion') {\n      data = this.transaccionForm.value;\n    }\n\n    // Aquí, enviar 'data' a tu servicio API...\n  }\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n  }\n}\n","<!-- app.component.html -->\n<p-toolbar>\n  <div class=\"p-toolbar-group-left\">\n    <h1>Aplicación Autorizador</h1>\n  </div>\n</p-toolbar>\n\n<div class=\"p-grid\">\n  <div class=\"p-col-12 p-md-6\">\n    <!-- Entrada JSON -->\n    <textarea\n      pInputTextarea\n      rows=\"15\"\n      cols=\"30\"\n      placeholder=\"Ingresa JSON aquí\"\n    ></textarea>\n  </div>\n  <div class=\"p-col-12 p-md-6\">\n    <!-- Formulario Dinámico -->\n    <p-dropdown\n      [options]=\"formTypes\"\n      placeholder=\"Selecciona un tipo\"\n    ></p-dropdown>\n    <!-- Aquí iría el contenido del formulario dinámico -->\n    <div *ngIf=\"selectedFormType === 'cuenta'\">\n      <form [formGroup]=\"cuentaForm\" (ngSubmit)=\"onSubmit()\">\n        <input type=\"text\" formControlName=\"id\" placeholder=\"ID\" />\n        <input type=\"checkbox\" formControlName=\"tarjetaActiva\" /> Tarjeta Activa\n        <input\n          type=\"text\"\n          formControlName=\"limiteDisponible\"\n          placeholder=\"Límite Disponible\"\n        />\n        <button type=\"submit\">Enviar Cuenta</button>\n      </form>\n    </div>\n\n    <div *ngIf=\"selectedFormType === 'transaccion'\">\n      <form [formGroup]=\"transaccionForm\" (ngSubmit)=\"onSubmit()\">\n        <input type=\"text\" formControlName=\"id\" placeholder=\"ID\" />\n        <input\n          type=\"text\"\n          formControlName=\"comerciante\"\n          placeholder=\"Comerciante\"\n        />\n        <input type=\"text\" formControlName=\"cantidad\" placeholder=\"Cantidad\" />\n        <input type=\"text\" formControlName=\"tiempo\" placeholder=\"Tiempo\" />\n        <button type=\"submit\">Enviar Transacción</button>\n      </form>\n    </div>\n  </div>\n  <button pButton type=\"button\" label=\"Enviar Datos\"></button>\n</div>\n\n<div class=\"p-grid\">\n  <div class=\"p-col-12\">\n    <!-- Área de Consola -->\n    <p-panel header=\"Consola de Resultados\">\n      <p>{{ apiResponse }}</p>\n    </p-panel>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}