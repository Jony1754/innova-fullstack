{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"primeng/checkbox\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/inputtextarea\";\nimport * as i8 from \"primeng/toolbar\";\nimport * as i9 from \"primeng/inputtext\";\nimport * as i10 from \"primeng/dropdown\";\nimport * as i11 from \"primeng/panel\";\nfunction AppComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function AppComponent_div_11_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit());\n    });\n    i0.ɵɵelement(2, \"p-checkbox\", 10)(3, \"input\", 11)(4, \"input\", 12)(5, \"button\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cuentaForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"binary\", true);\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function AppComponent_div_12_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵelement(2, \"p-inputText\", 14)(3, \"p-inputText\", 15)(4, \"p-inputText\", 16)(5, \"p-inputText\", 17)(6, \"button\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.transaccionForm);\n  }\n}\nexport class AppComponent {\n  constructor(primengConfig, formBuilder) {\n    this.primengConfig = primengConfig;\n    this.formBuilder = formBuilder;\n    this.jsonData = '';\n    this.apiResponse = '';\n    this.selectedFormType = 'cuenta';\n    this.cuentaForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      tarjetaActiva: [false, Validators.required],\n      limiteDisponible: ['', Validators.required]\n    });\n    this.transaccionForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      comerciante: ['', Validators.required],\n      cantidad: ['', Validators.required],\n      tiempo: ['', Validators.required]\n    });\n    this.formTypes = [{\n      label: 'Cuenta',\n      value: 'cuenta'\n    }, {\n      label: 'Transacción',\n      value: 'transaccion'\n    }];\n  }\n  onSubmit() {\n    let data;\n    if (this.selectedFormType === 'cuenta') {\n      data = this.cuentaForm.value;\n    } else if (this.selectedFormType === 'transaccion') {\n      data = this.transaccionForm.value;\n    }\n    // Aquí, enviar 'data' a tu servicio API...\n  }\n\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 19,\n    vars: 5,\n    consts: [[1, \"p-toolbar-group-left\"], [1, \"grid\"], [1, \"col\", \"w-full\"], [\"pInputTextarea\", \"\", \"rows\", \"15\", \"cols\", \"30\", \"placeholder\", \"Ingresa JSON aqu\\u00ED\", 1, \"w-full\"], [1, \"col\"], [\"placeholder\", \"Selecciona un tipo\", 1, \"w-full\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [1, \"col-12\"], [\"header\", \"Consola de Resultados\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"tarjetaActiva\", \"label\", \"Tarjeta Activa\", 1, \"w-full\", 3, \"binary\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"id\", \"placeholder\", \"id\", 1, \"w-full\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"limiteDisponible\", \"placeholder\", \"Limite disponible\", 1, \"w-full\", \"mb-4\"], [\"pButton\", \"\", \"type\", \"submit\", \"label\", \"Enviar Cuenta\"], [\"formControlName\", \"id\", \"placeholder\", \"ID\"], [\"formControlName\", \"comerciante\", \"placeholder\", \"Comerciante\"], [\"formControlName\", \"cantidad\", \"placeholder\", \"Cantidad\"], [\"formControlName\", \"tiempo\", \"placeholder\", \"Tiempo\"], [\"pButton\", \"\", \"type\", \"submit\", \"label\", \"Enviar Transacci\\u00F3n\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-toolbar\")(1, \"div\", 0)(2, \"h1\");\n        i0.ɵɵtext(3, \"Aplicaci\\u00F3n Autorizador\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2);\n        i0.ɵɵelement(6, \"textarea\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"h2\");\n        i0.ɵɵtext(9, \"Formulario Din\\u00E1mico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p-dropdown\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_p_dropdown_ngModelChange_10_listener($event) {\n          return ctx.selectedFormType = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, AppComponent_div_11_Template, 6, 2, \"div\", 6);\n        i0.ɵɵtemplate(12, AppComponent_div_12_Template, 7, 1, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"div\", 7)(15, \"p-panel\", 8)(16, \"p\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(18, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"options\", ctx.formTypes)(\"ngModel\", ctx.selectedFormType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFormType === \"cuenta\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFormType === \"transaccion\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.apiResponse);\n      }\n    },\n    dependencies: [i3.NgIf, i4.RouterOutlet, i5.Checkbox, i6.ButtonDirective, i7.InputTextarea, i8.Toolbar, i9.InputText, i10.Dropdown, i11.Panel, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵlistener","AppComponent_div_11_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","cuentaForm","AppComponent_div_12_Template_form_ngSubmit_1_listener","_r5","ctx_r4","ctx_r1","transaccionForm","AppComponent","constructor","primengConfig","formBuilder","jsonData","apiResponse","selectedFormType","group","id","required","tarjetaActiva","limiteDisponible","comerciante","cantidad","tiempo","formTypes","label","value","data","ngOnInit","ripple","_","ɵɵdirectiveInject","i1","PrimeNGConfig","i2","FormBuilder","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtext","AppComponent_Template_p_dropdown_ngModelChange_10_listener","$event","ɵɵtemplate","AppComponent_div_11_Template","AppComponent_div_12_Template","ɵɵtextInterpolate"],"sources":["C:\\Users\\jony1\\Desktop\\projects\\TECHNICAL_TESTS\\innova-schools-fullstack\\frontend-app-autorizador\\src\\app\\app.component.ts","C:\\Users\\jony1\\Desktop\\projects\\TECHNICAL_TESTS\\innova-schools-fullstack\\frontend-app-autorizador\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { PrimeNGConfig } from 'primeng/api';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  jsonData = '';\n  apiResponse = '';\n  cuentaForm: FormGroup;\n  transaccionForm: FormGroup;\n  selectedFormType: string = 'cuenta';\n  formTypes: any[];\n\n  constructor(\n    private primengConfig: PrimeNGConfig,\n    private formBuilder: FormBuilder\n  ) {\n    this.cuentaForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      tarjetaActiva: [false, Validators.required],\n      limiteDisponible: ['', Validators.required],\n    });\n\n    this.transaccionForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      comerciante: ['', Validators.required],\n      cantidad: ['', Validators.required],\n      tiempo: ['', Validators.required],\n    });\n\n    this.formTypes = [\n      { label: 'Cuenta', value: 'cuenta' },\n      { label: 'Transacción', value: 'transaccion' },\n    ];\n  }\n  onSubmit() {\n    let data;\n    if (this.selectedFormType === 'cuenta') {\n      data = this.cuentaForm.value;\n    } else if (this.selectedFormType === 'transaccion') {\n      data = this.transaccionForm.value;\n    }\n\n    // Aquí, enviar 'data' a tu servicio API...\n  }\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n  }\n}\n","<!-- app.component.html -->\n<p-toolbar>\n  <div class=\"p-toolbar-group-left\">\n    <h1>Aplicación Autorizador</h1>\n  </div>\n</p-toolbar>\n\n<div class=\"grid\">\n  <div class=\"col w-full\">\n    <!-- Entrada JSON -->\n    <textarea\n      pInputTextarea\n      class=\"w-full\"\n      rows=\"15\"\n      cols=\"30\"\n      placeholder=\"Ingresa JSON aquí\"\n    ></textarea>\n  </div>\n  <div class=\"col\">\n    <!-- Formulario Dinámico -->\n    <h2>Formulario Dinámico</h2>\n    <p-dropdown\n      class=\"w-full\"\n      [options]=\"formTypes\"\n      [(ngModel)]=\"selectedFormType\"\n      placeholder=\"Selecciona un tipo\"\n    ></p-dropdown>\n\n    <div *ngIf=\"selectedFormType === 'cuenta'\">\n      <form [formGroup]=\"cuentaForm\" (ngSubmit)=\"onSubmit()\">\n        <p-checkbox\n          [binary]=\"true\"\n          class=\"w-full\"\n          formControlName=\"tarjetaActiva\"\n          label=\"Tarjeta Activa\"\n        ></p-checkbox>\n\n        <input\n          type=\"text\"\n          pInputText\n          formControlName=\"id\"\n          placeholder=\"id\"\n          class=\"w-full\"\n        />\n\n        <input\n          type=\"text\"\n          pInputText\n          class=\"w-full mb-4\"\n          formControlName=\"limiteDisponible\"\n          placeholder=\"Limite disponible\"\n        />\n        <button pButton type=\"submit\" label=\"Enviar Cuenta\"></button>\n      </form>\n    </div>\n\n    <div *ngIf=\"selectedFormType === 'transaccion'\">\n      <form [formGroup]=\"transaccionForm\" (ngSubmit)=\"onSubmit()\">\n        <p-inputText formControlName=\"id\" placeholder=\"ID\"></p-inputText>\n        <p-inputText\n          formControlName=\"comerciante\"\n          placeholder=\"Comerciante\"\n        ></p-inputText>\n        <p-inputText\n          formControlName=\"cantidad\"\n          placeholder=\"Cantidad\"\n        ></p-inputText>\n        <p-inputText\n          formControlName=\"tiempo\"\n          placeholder=\"Tiempo\"\n        ></p-inputText>\n        <button pButton type=\"submit\" label=\"Enviar Transacción\"></button>\n      </form>\n    </div>\n  </div>\n</div>\n\n<div class=\"grid\">\n  <div class=\"col-12\">\n    <!-- Área de Consola -->\n    <p-panel header=\"Consola de Resultados\">\n      <p>{{ apiResponse }}</p>\n    </p-panel>\n  </div>\n</div>\n<router-outlet></router-outlet>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}