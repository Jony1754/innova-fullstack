{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { catchError, of } from 'rxjs';\nexport let AppComponent = class AppComponent {\n  constructor(primengConfig, formBuilder, apiService) {\n    this.primengConfig = primengConfig;\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.apiUrl = environment.apiUrl;\n    this.resultData = [];\n    this.jsonData = '';\n    this.consoleMode = false;\n    this.apiResponses = [];\n    this.selectedFormType = 'cuenta';\n    this.cuentaForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      tarjetaActiva: [false, Validators.required],\n      limiteDisponible: ['', Validators.required]\n    });\n    this.transaccionForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      comerciante: ['', Validators.required],\n      cantidad: ['', Validators.required],\n      tiempo: ['', Validators.required]\n    });\n    this.formTypes = [{\n      label: 'Cuenta',\n      value: 'cuenta'\n    }, {\n      label: 'Transacción',\n      value: 'transaccion'\n    }];\n  }\n  toggleMode() {\n    this.consoleMode = !this.consoleMode;\n  }\n  processJsonData() {\n    console.log('jsonData: ', this.jsonData);\n    const lines = this.jsonData.split('\\n');\n    console.log('lines: ', lines);\n    this.apiResponses = [];\n    for (const line of lines) {\n      try {\n        const data = JSON.parse(line);\n        if (data.cuenta) {\n          this.apiService.enviarDatos(`${this.apiUrl + '/cuenta'}`, data.cuenta).pipe(catchError(err => {\n            console.log(err);\n            return of(err.error);\n          })).subscribe(response => {\n            this.apiResponses.push(response);\n          });\n        } else if (data.transaccion) {\n          this.apiService.enviarDatos(`${this.apiUrl + '/transaccion'}`, data.transaccion).pipe(catchError(err => {\n            console.log(err);\n            return of(err.error);\n          })).subscribe(response => {\n            this.apiResponses.push(response);\n          });\n        }\n      } catch (error) {\n        console.error('Error al analizar el JSON:', error);\n      }\n    }\n  }\n  onSubmit() {\n    let data;\n    let url = this.apiUrl;\n    if (this.selectedFormType === 'cuenta') {\n      data = {\n        id: this.cuentaForm.value.id,\n        tarjeta_activa: this.cuentaForm.value.tarjetaActiva,\n        limite_disponible: this.cuentaForm.value.limiteDisponible\n      };\n      url += '/cuenta';\n    } else if (this.selectedFormType === 'transaccion') {\n      data = {\n        comerciante: this.transaccionForm.value.comerciante,\n        cantidad: this.transaccionForm.value.cantidad,\n        tiempo: new Date(this.transaccionForm.value.tiempo).toISOString()\n      };\n      url += '/transaccion';\n    }\n    console.log('calling onSubmit with url: ', url, ' and data: ', data);\n    this.apiService.enviarDatos(url, data).pipe(catchError(err => {\n      console.log(err);\n      return of(err.error);\n    })).subscribe(response => {\n      console.log('response: ', response);\n      return this.apiResponses.unshift(response);\n    });\n  }\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})], AppComponent);","map":{"version":3,"names":["Component","Validators","environment","catchError","of","AppComponent","constructor","primengConfig","formBuilder","apiService","apiUrl","resultData","jsonData","consoleMode","apiResponses","selectedFormType","cuentaForm","group","id","required","tarjetaActiva","limiteDisponible","transaccionForm","comerciante","cantidad","tiempo","formTypes","label","value","toggleMode","processJsonData","console","log","lines","split","line","data","JSON","parse","cuenta","enviarDatos","pipe","err","error","subscribe","response","push","transaccion","onSubmit","url","tarjeta_activa","limite_disponible","Date","toISOString","unshift","ngOnInit","ripple","__decorate","selector","templateUrl"],"sources":["C:\\Users\\jony1\\Desktop\\projects\\TECHNICAL_TESTS\\innova-schools-fullstack\\frontend-app-autorizador\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { ApiService } from './api.service';\nimport { environment } from 'src/environments/environment';\nimport { catchError, of, throwError } from 'rxjs';\nimport { SearchResponse } from 'src/interfaces/CuentaResponse';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  private apiUrl = environment.apiUrl;\n  public resultData = <SearchResponse[]>[];\n  public jsonData = '';\n  public consoleMode = false;\n  public apiResponses = <SearchResponse[]>[];\n  public cuentaForm: FormGroup;\n  public transaccionForm: FormGroup;\n  public selectedFormType: string = 'cuenta';\n  public formTypes: any[];\n\n  constructor(\n    private primengConfig: PrimeNGConfig,\n    private formBuilder: FormBuilder,\n    private apiService: ApiService\n  ) {\n    this.cuentaForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      tarjetaActiva: [false, Validators.required],\n      limiteDisponible: ['', Validators.required],\n    });\n\n    this.transaccionForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      comerciante: ['', Validators.required],\n      cantidad: ['', Validators.required],\n      tiempo: ['', Validators.required],\n    });\n\n    this.formTypes = [\n      { label: 'Cuenta', value: 'cuenta' },\n      { label: 'Transacción', value: 'transaccion' },\n    ];\n  }\n\n  public toggleMode(): void {\n    this.consoleMode = !this.consoleMode;\n  }\n\n  public processJsonData(): void {\n    console.log('jsonData: ', this.jsonData);\n    const lines = this.jsonData.split('\\n');\n    console.log('lines: ', lines);\n    this.apiResponses = [];\n\n    for (const line of lines) {\n      try {\n        const data = JSON.parse(line);\n\n        if (data.cuenta) {\n          this.apiService\n            .enviarDatos(`${this.apiUrl + '/cuenta'}`, data.cuenta)\n            .pipe<SearchResponse>(\n              catchError((err) => {\n                console.log(err);\n                return of(err.error);\n              })\n            )\n            .subscribe((response: SearchResponse) => {\n              this.apiResponses.push(response);\n            });\n        } else if (data.transaccion) {\n          this.apiService\n            .enviarDatos(`${this.apiUrl + '/transaccion'}`, data.transaccion)\n            .pipe<SearchResponse>(\n              catchError((err) => {\n                console.log(err);\n                return of(err.error);\n              })\n            )\n            .subscribe((response: SearchResponse) => {\n              this.apiResponses.push(response);\n            });\n        }\n      } catch (error) {\n        console.error('Error al analizar el JSON:', error);\n      }\n    }\n  }\n\n  onSubmit() {\n    let data;\n    let url = this.apiUrl;\n\n    if (this.selectedFormType === 'cuenta') {\n      data = {\n        id: this.cuentaForm.value.id,\n        tarjeta_activa: this.cuentaForm.value.tarjetaActiva,\n        limite_disponible: this.cuentaForm.value.limiteDisponible,\n      };\n      url += '/cuenta';\n    } else if (this.selectedFormType === 'transaccion') {\n      data = {\n        comerciante: this.transaccionForm.value.comerciante,\n        cantidad: this.transaccionForm.value.cantidad,\n        tiempo: new Date(this.transaccionForm.value.tiempo).toISOString(),\n      };\n\n      url += '/transaccion';\n    }\n    console.log('calling onSubmit with url: ', url, ' and data: ', data);\n\n    this.apiService\n      .enviarDatos(url, data)\n      .pipe<SearchResponse>(\n        catchError((err) => {\n          console.log(err);\n          return of(err.error);\n        })\n      )\n      .subscribe((response) => {\n        console.log('response: ', response);\n        return this.apiResponses.unshift(response);\n      });\n  }\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}